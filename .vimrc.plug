
" START
call plug#begin('~/.vim/plugged')

  " PACK
  " Plug 'sheerun/vim-polyglot'
  
  " THEMES
  Plug 'joshdick/onedark.vim' 
  Plug 'rakr/vim-one' 

  Plug 'vim-airline/vim-airline'
  Plug 'vim-airline/vim-airline-themes'
 
  " MANAGER FILES AND FOLDER
  Plug 'preservim/nerdtree'
  Plug 'preservim/nerdcommenter'
  Plug 'tiagofumo/vim-nerdtree-syntax-highlight'
  Plug 'Xuyuanp/nerdtree-git-plugin'
  Plug 'kien/ctrlp.vim'
  Plug 'mhinz/vim-startify'
  Plug 'ryanoasis/vim-devicons'
  
  " code 
  " Plug 'jiangmiao/auto-pairs'
  " Plug 'tpope/vim-fugitive'
  " Plug 'Chiel92/vim-autoformat'
  
  Plug 'tpope/vim-surround'

  " Plug 'neoclide/coc.nvim', {'branch': 'release'}
  Plug 'neoclide/coc.nvim', {'branch': 'master', 'do': 'yarn install --frozen-lockfile'}
  Plug 'junegunn/fzf', {'do' : { -> fzf#install() }}
  Plug 'junegunn/fzf.vim'
  
  Plug 'airblade/vim-gitgutter'
  Plug 'roxma/vim-hug-neovim-rpc'
  
  Plug 'voldikss/vim-floaterm'

  Plug 'google/vim-maktaba'
  Plug 'google/vim-codefmt'
  Plug 'google/vim-glaive'

  if has('win32') || has('win64')
    Plug 'tbodt/deoplete-tabnine', { 'do': 'powershell.exe .\install.ps1' }
  else
    Plug 'tbodt/deoplete-tabnine', { 'do': './install.sh' }
  endif

  " if has('nvim')
  "   Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }
  " else
  "   Plug 'Shougo/deoplete.nvim'
  "   Plug 'roxma/nvim-yarp'
  "   Plug 'roxma/vim-hug-neovim-rpc'
  " endif
  " let g:deoplete#enable_at_startup = 1


  "Plug 'prettier/vim-prettier', {
  " \ 'do': 'yarn install',
  " \ 'for': ['javascript', 'typescript', 'css', 'less', 'scss', 'json', 'graphql', 'markdown', 'vue', 'svelte', 'yaml', 'html'] }
  Plug 'prettier/vim-prettier', { 'do': 'yarn install' }


  " HEALTHCHECK -> command checkheald
  if !has('nvim')
    Plug 'rhysd/vim-healthcheck'
  endif

call plug#end()
" END
